%!PS-Adobe-2.0 EPSF-2.0
%%Title: plot_output.tex
%%Creator: gnuplot 4.6 patchlevel 2
%%CreationDate: Tue Jan  2 15:04:10 2018
%%DocumentFonts: 
%%BoundingBox: 50 50 302 238
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 302 50 lineto 302 238 lineto 50 238 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot_output.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 2)
  /Author (s161155)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jan  2 15:04:10 2018)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
LCb setrgbcolor
1078 704 M
63 0 V
3502 0 R
-63 0 V
stroke
LTb
1078 945 M
63 0 V
3502 0 R
-63 0 V
1078 1185 M
63 0 V
3502 0 R
-63 0 V
1078 1426 M
63 0 V
3502 0 R
-63 0 V
1078 1667 M
63 0 V
3502 0 R
-63 0 V
1078 1908 M
63 0 V
3502 0 R
-63 0 V
1078 2148 M
63 0 V
3502 0 R
-63 0 V
1078 2389 M
63 0 V
3502 0 R
-63 0 V
1078 2630 M
63 0 V
3502 0 R
-63 0 V
1078 2870 M
63 0 V
3502 0 R
-63 0 V
1078 3111 M
63 0 V
3502 0 R
-63 0 V
1078 704 M
0 63 V
0 2344 R
0 -63 V
1474 704 M
0 63 V
0 2344 R
0 -63 V
1870 704 M
0 63 V
0 2344 R
0 -63 V
2266 704 M
0 63 V
0 2344 R
0 -63 V
2662 704 M
0 63 V
0 2344 R
0 -63 V
3059 704 M
0 63 V
0 2344 R
0 -63 V
3455 704 M
0 63 V
0 2344 R
0 -63 V
3851 704 M
0 63 V
0 2344 R
0 -63 V
4247 704 M
0 63 V
0 2344 R
0 -63 V
4643 704 M
0 63 V
0 2344 R
0 -63 V
stroke
1078 3111 N
0 -2407 V
3565 0 V
0 2407 V
-3565 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
LT0
LC0 setrgbcolor
3788 2938 M
591 0 V
1078 2028 M
20 119 V
20 116 V
19 113 V
20 108 V
20 103 V
20 96 V
20 88 V
19 79 V
20 70 V
20 60 V
20 49 V
20 38 V
19 26 V
20 15 V
20 2 V
20 -9 V
20 -21 V
20 -34 V
19 -44 V
20 -56 V
20 -65 V
20 -76 V
20 -85 V
19 -92 V
20 -100 V
20 -106 V
20 -111 V
20 -116 V
19 -118 V
20 -119 V
20 -121 V
20 -119 V
20 -118 V
19 -115 V
20 -110 V
20 -105 V
20 -99 V
20 -91 V
19 -83 V
20 -74 V
20 -64 V
20 -54 V
20 -43 V
19 -31 V
20 -19 V
20 -8 V
20 5 V
20 16 V
19 28 V
20 40 V
20 51 V
20 62 V
20 71 V
20 81 V
19 90 V
20 97 V
20 103 V
20 110 V
20 113 V
19 117 V
20 120 V
20 120 V
20 120 V
20 118 V
19 116 V
20 113 V
20 107 V
20 102 V
20 94 V
19 87 V
20 78 V
20 68 V
20 58 V
20 47 V
19 36 V
20 25 V
20 12 V
20 1 V
20 -12 V
19 -23 V
20 -35 V
20 -47 V
20 -57 V
20 -68 V
19 -77 V
20 -86 V
20 -94 V
20 -101 V
20 -107 V
20 -111 V
19 -116 V
20 -119 V
20 -120 V
20 -120 V
20 -119 V
19 -118 V
20 -114 V
20 -109 V
20 -104 V
20 -98 V
19 -90 V
20 -81 V
stroke 3098 984 M
20 -73 V
20 -62 V
20 -52 V
19 -41 V
20 -29 V
20 -18 V
20 -5 V
20 7 V
19 18 V
20 30 V
20 42 V
20 53 V
20 63 V
19 73 V
20 83 V
20 91 V
20 98 V
20 104 V
19 110 V
20 115 V
20 117 V
20 120 V
20 120 V
20 120 V
19 118 V
20 116 V
20 111 V
20 107 V
20 100 V
19 93 V
20 86 V
20 76 V
20 67 V
20 56 V
19 45 V
20 34 V
20 23 V
20 10 V
20 -1 V
19 -14 V
20 -25 V
20 -37 V
20 -49 V
20 -59 V
19 -69 V
20 -79 V
20 -87 V
20 -95 V
20 -102 V
19 -108 V
20 -113 V
20 -116 V
20 -119 V
20 -120 V
19 -120 V
20 -119 V
20 -117 V
20 -113 V
20 -109 V
20 -103 V
19 -96 V
20 -89 V
20 -80 V
20 -71 V
20 -61 V
19 -50 V
20 -39 V
20 -27 V
20 -15 V
20 -4 V
19 9 V
20 20 V
20 33 V
20 43 V
20 55 V
19 65 V
20 75 V
1078 2028 Pls
1098 2147 Pls
1118 2263 Pls
1137 2376 Pls
1157 2484 Pls
1177 2587 Pls
1197 2683 Pls
1217 2771 Pls
1236 2850 Pls
1256 2920 Pls
1276 2980 Pls
1296 3029 Pls
1316 3067 Pls
1335 3093 Pls
1355 3108 Pls
1375 3110 Pls
1395 3101 Pls
1415 3080 Pls
1435 3046 Pls
1454 3002 Pls
1474 2946 Pls
1494 2881 Pls
1514 2805 Pls
1534 2720 Pls
1553 2628 Pls
1573 2528 Pls
1593 2422 Pls
1613 2311 Pls
1633 2195 Pls
1652 2077 Pls
1672 1958 Pls
1692 1837 Pls
1712 1718 Pls
1732 1600 Pls
1751 1485 Pls
1771 1375 Pls
1791 1270 Pls
1811 1171 Pls
1831 1080 Pls
1850 997 Pls
1870 923 Pls
1890 859 Pls
1910 805 Pls
1930 762 Pls
1949 731 Pls
1969 712 Pls
1989 704 Pls
2009 709 Pls
2029 725 Pls
2048 753 Pls
2068 793 Pls
2088 844 Pls
2108 906 Pls
2128 977 Pls
2148 1058 Pls
2167 1148 Pls
2187 1245 Pls
2207 1348 Pls
2227 1458 Pls
2247 1571 Pls
2266 1688 Pls
2286 1808 Pls
2306 1928 Pls
2326 2048 Pls
2346 2166 Pls
2365 2282 Pls
2385 2395 Pls
2405 2502 Pls
2425 2604 Pls
2445 2698 Pls
2464 2785 Pls
2484 2863 Pls
2504 2931 Pls
2524 2989 Pls
2544 3036 Pls
2563 3072 Pls
2583 3097 Pls
2603 3109 Pls
2623 3110 Pls
2643 3098 Pls
2662 3075 Pls
2682 3040 Pls
2702 2993 Pls
2722 2936 Pls
2742 2868 Pls
2761 2791 Pls
2781 2705 Pls
2801 2611 Pls
2821 2510 Pls
2841 2403 Pls
2861 2292 Pls
2880 2176 Pls
2900 2057 Pls
2920 1937 Pls
2940 1817 Pls
2960 1698 Pls
2979 1580 Pls
2999 1466 Pls
3019 1357 Pls
3039 1253 Pls
3059 1155 Pls
3078 1065 Pls
3098 984 Pls
3118 911 Pls
3138 849 Pls
3158 797 Pls
3177 756 Pls
3197 727 Pls
3217 709 Pls
3237 704 Pls
3257 711 Pls
3276 729 Pls
3296 759 Pls
3316 801 Pls
3336 854 Pls
3356 917 Pls
3375 990 Pls
3395 1073 Pls
3415 1164 Pls
3435 1262 Pls
3455 1366 Pls
3474 1476 Pls
3494 1591 Pls
3514 1708 Pls
3534 1828 Pls
3554 1948 Pls
3574 2068 Pls
3593 2186 Pls
3613 2302 Pls
3633 2413 Pls
3653 2520 Pls
3673 2620 Pls
3692 2713 Pls
3712 2799 Pls
3732 2875 Pls
3752 2942 Pls
3772 2998 Pls
3791 3043 Pls
3811 3077 Pls
3831 3100 Pls
3851 3110 Pls
3871 3109 Pls
3890 3095 Pls
3910 3070 Pls
3930 3033 Pls
3950 2984 Pls
3970 2925 Pls
3989 2856 Pls
4009 2777 Pls
4029 2690 Pls
4049 2595 Pls
4069 2493 Pls
4088 2385 Pls
4108 2272 Pls
4128 2156 Pls
4148 2037 Pls
4168 1917 Pls
4187 1797 Pls
4207 1678 Pls
4227 1561 Pls
4247 1448 Pls
4267 1339 Pls
4287 1236 Pls
4306 1140 Pls
4326 1051 Pls
4346 971 Pls
4366 900 Pls
4386 839 Pls
4405 789 Pls
4425 750 Pls
4445 723 Pls
4465 708 Pls
4485 704 Pls
4504 713 Pls
4524 733 Pls
4544 766 Pls
4564 809 Pls
4584 864 Pls
4603 929 Pls
4623 1004 Pls
4083 2938 Pls
1.000 UL
LTb
LCb setrgbcolor
1078 3111 N
0 -2407 V
3565 0 V
0 2407 V
-3565 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
